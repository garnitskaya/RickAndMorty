{"version":3,"sources":["components/errorMessage/ErrorMessage.js","services/RickAndMortyService.js","components/errorBoundary/ErrorBoundary.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/episodes/Episodes.js","components/pages/EpisodesPage.js"],"names":["ErrorMessage","className","viewBox","y2","x2","y1","gradientUnits","id","stopColor","offset","transform","r","cy","cx","fill","fillOpacity","d","RickAndMortyService","_apiBase","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","species","results","map","_transformCharacter","getCharacter","getAllEpisode","_transformEpisode","getEpisode","getAllLocation","_transformLocation","getLocation","elements","element","children","item","match","to","src","alt","char","name","image","locationName","location","locationUrl","slice","episode","episodes","gender","airDate","air_date","characters","type","dimension","residents","ErrorBoundary","state","error","this","setState","props","Component","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Episodes","useState","setEpisodes","loading","setLoading","setError","newItemLoading","setNewItemLoading","setOffset","ended","setEnded","rickAndMortyService","useEffect","onRequest","onEpisodeLoading","then","onEpisodeLoaded","catch","onError","newEpisodes","length","spinner","Spinner","errorMessage","content","disabled","style","onClick","EpisodesPage"],"mappings":"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","file":"static/js/7.87f8ab0f.chunk.js","sourcesContent":["import './error.scss';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <div className='error'>\r\n            <svg viewBox=\"0 0 64 64\">\r\n                <defs><linearGradient y2=\"161.29\" x2=\"0\" y1=\"218.22\" gradientUnits=\"userSpaceOnUse\" id=\"0\">\r\n                    <stop stopColor=\"#c52828\" />\r\n                    <stop offset=\"1\" stopColor=\"#ff5454\" /></linearGradient>\r\n                </defs>\r\n                <g transform=\"matrix(.92857 0 0 .92857-666.94-144.37)\">\r\n                    <circle r=\"28\" cy=\"189.93\" cx=\"752.7\" fill=\"url(#0)\" />\r\n                    <g fill=\"#fff\" fillOpacity=\".851\">\r\n                        <path d=\"m739.54 180.23c0-2.166 1.756-3.922 3.922-3.922 2.165 0 3.922 1.756 3.922 3.922 0 2.167-1.756 3.923-3.922 3.923-2.166 0-3.922-1.756-3.922-3.923m17.784 0c0-2.166 1.758-3.922 3.923-3.922 2.165 0 3.922 1.756 3.922 3.922 0 2.167-1.756 3.923-3.922 3.923-2.166 0-3.923-1.756-3.923-3.923\" />\r\n                        <path d=\"m766.89 200.51c-2.431-5.621-8.123-9.253-14.502-9.253-6.516 0-12.242 3.65-14.588 9.3-.402.967.056 2.078 1.025 2.48.238.097.485.144.727.144.744 0 1.45-.44 1.753-1.17 1.756-4.229 6.107-6.96 11.08-6.96 4.864 0 9.189 2.733 11.02 6.965.416.962 1.533 1.405 2.495.989.961-.417 1.405-1.533.989-2.495\" />\r\n                    </g>\r\n                </g>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { Link } from 'react-router-dom';\r\n\r\nexport default class RickAndMortyService {\r\n    _apiBase = 'https://rickandmortyapi.com/api';\r\n    _baseOffset = 1;\r\n\r\n    getResource = async (url) => {\r\n        const res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status:${res.status}`);\r\n        }\r\n        return await res.json();\r\n    }\r\n\r\n    //getAllPages = async () => {\r\n    //    const res = await this.getResource(`${this._apiBase}/character`);\r\n    //    return res.info.pages;\r\n    //}\r\n\r\n    getAllCharacters = async (offset = this._baseOffset, species = '') => {\r\n        const res = await this.getResource(`${this._apiBase}/character/?page=${offset}&species=${species}`);\r\n        return res.results.map(this._transformCharacter);\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}/character/${id}`);\r\n        return this._transformCharacter(res);\r\n    }\r\n\r\n    getAllEpisode = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}/episode/?page=${offset}`);\r\n        return res.results.map(this._transformEpisode);\r\n    }\r\n\r\n    getEpisode = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}/episode/${id}`);\r\n        return this._transformEpisode(res);\r\n    }\r\n\r\n\r\n    getAllLocation = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}/location/?page=${offset}`);\r\n        return res.results.map(this._transformLocation);\r\n    }\r\n\r\n    getLocation = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}/location/${id}`);\r\n        return this._transformLocation(res);\r\n    }\r\n\r\n    elements = (element, children) => {\r\n        return element.map(item => {\r\n            let id = item.match(/\\/([0-9]*)$/)[1];\r\n            return (\r\n                <Link to={`/characters/${id}`} key={id}>\r\n                    {children}\r\n                    <img\r\n                        src={`https://rickandmortyapi.com/api/character/avatar/${id}.jpeg`}\r\n                        alt=\"character\" />\r\n                </Link>)\r\n        })\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            status: char.status,\r\n            species: char.species,\r\n            image: char.image,\r\n            locationName: char.location.name,\r\n            locationUrl: char.location.url.slice(41),\r\n            episode: char.episode[0].match(/\\/([0-9]*)$/)[1],\r\n            episodes: char.episode.map(item => {\r\n                let id = item.match(/\\/([0-9]*)$/)[1];\r\n                return (\r\n                    <Link key={id} to={`/episodes/${id}`}>\r\n                        Episodes № {id}\r\n                    </Link>\r\n                )\r\n            }),\r\n            gender: char.gender\r\n        }\r\n    }\r\n\r\n    _transformEpisode = (episode) => {\r\n        return {\r\n            id: episode.id,\r\n            name: episode.name,\r\n            airDate: episode.air_date,\r\n            characters: this.elements(episode.characters),\r\n            url: episode.url\r\n        }\r\n    }\r\n\r\n    _transformLocation = (location) => {\r\n        return {\r\n            id: location.id,\r\n            name: location.name,\r\n            type: location.type,\r\n            dimension: location.dimension,\r\n            residents: this.elements(location.residents),\r\n            url: location.url\r\n        }\r\n    }\r\n}\r\n\r\n","import { Component } from 'react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nexport default class ErrorBoundary extends Component {\r\n\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage>'Something went wrong...'</ErrorMessage>\r\n        }\r\n        return this.props.children\r\n    }\r\n};\r\n\r\n","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useEffect, useState } from 'react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Spinner from '../spinner/Spinner';\r\nimport RickAndMortyService from './../../services/RickAndMortyService';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './episodes.scss';\r\n\r\nconst Episodes = () => {\r\n    const [episodes, setEpisodes] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(1);\r\n    const [ended, setEnded] = useState(false);\r\n\r\n    const rickAndMortyService = new RickAndMortyService();\r\n\r\n    useEffect(() => {\r\n        onRequest();\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n\r\n    const onRequest = (offset) => {\r\n        onEpisodeLoading();\r\n        rickAndMortyService\r\n            .getAllEpisode(offset)\r\n            .then(onEpisodeLoaded)\r\n            .catch(onError)\r\n    }\r\n\r\n    const onEpisodeLoading = () => {\r\n        setNewItemLoading(true);\r\n    }\r\n\r\n    const onEpisodeLoaded = (newEpisodes) => {\r\n        let ended = false;\r\n        if (newEpisodes.length < 20) {\r\n            ended = true\r\n        }\r\n\r\n        setEpisodes(episodes => [...episodes, ...newEpisodes]);\r\n        setLoading(false);\r\n        setNewItemLoading(false);\r\n        setOffset(offset => offset + 1);\r\n        setEnded(ended);\r\n    }\r\n\r\n    const onError = () => {\r\n        setError(true);\r\n        setLoading(false);\r\n    }\r\n\r\n    const renderItem = (arr) => {\r\n        return arr.map(({ id, name, characters, airDate }) => {\r\n            return (\r\n                <div className='episodes__item' key={id}>\r\n                    <Link to={`/episodes/${id}`} className='episodes__name'>Episode № {id} : {name}</Link>\r\n                    <span className='episodes__date'>{airDate}</span>\r\n                    <div className='episodes__img'>{characters}</div>\r\n                </div>)\r\n        })\r\n    }\r\n\r\n    const episode = renderItem(episodes);\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n    const content = !(loading || error) ? episode : null;\r\n\r\n    return (\r\n        <div className='episodes'>\r\n\r\n            <h2 className='episodes__title'>Episodes </h2>\r\n            <div className='episodes__list'>\r\n\r\n                {spinner}\r\n                {errorMessage}\r\n                {content}\r\n\r\n            </div>\r\n            <button\r\n                className='button__load button'\r\n                disabled={newItemLoading}\r\n                style={{ 'display': ended ? 'none' : 'block' }}\r\n                onClick={() => onRequest(offset)}\r\n            >\r\n                load more\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Episodes;","import ErrorBoundary from './../errorBoundary/ErrorBoundary';\r\nimport Episodes from './../episodes/Episodes';\r\n\r\nconst EpisodesPage = () => {\r\n    return (\r\n        <ErrorBoundary>\r\n            <Episodes />\r\n        </ErrorBoundary>\r\n    )\r\n}\r\n\r\nexport default EpisodesPage;"],"sourceRoot":""}