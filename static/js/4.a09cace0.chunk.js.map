{"version":3,"sources":["components/errorMessage/ErrorMessage.js","services/RickAndMortyService.js","components/errorBoundary/ErrorBoundary.js","components/randomChar/RandomChar.js","components/searchPanel/SearchPanel.js","components/itemFilter/ItemFilter.js","components/charList/CharList.js","components/pages/CharactersPage.js"],"names":["ErrorMessage","className","viewBox","y2","x2","y1","gradientUnits","id","stopColor","offset","transform","r","cy","cx","fill","fillOpacity","d","RickAndMortyService","_apiBase","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","species","results","map","_transformCharacter","getCharacter","getAllEpisode","_transformEpisode","getEpisode","getAllLocation","_transformLocation","getLocation","elements","element","children","item","match","to","src","alt","char","name","image","locationName","location","locationUrl","slice","episode","episodes","gender","airDate","air_date","characters","type","dimension","residents","ErrorBoundary","state","error","this","setState","props","Component","View","RandomChar","useState","setChar","loading","setLoading","setError","rickAndMortyService","useEffect","updateChar","timeId","setInterval","clearInterval","Math","floor","random","onCharLoading","then","onCharLoaded","catch","onError","spinner","errorMessage","content","onClick","SearchPanel","term","setTerm","placeholder","value","onChange","e","target","onUpdateSearch","ItemFilter","label","initialValues","filter","onSubmit","updateFilterChar","onFilterChange","values","as","i","clazz","CharList","charList","setCharList","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","selectedChar","setSelectedChar","showInfo","setShowInfo","setFilter","onRequest","onCharListLoading","onCharListLoaded","onCharFilterLoaded","ended","length","newCharList","items","arr","statusClassName","speciesClassName","active","onShowInfo","allCharList","renderItems","toLowerCase","indexOf","searchItem","Spinner","disabled","style","CharactersPage"],"mappings":"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","file":"static/js/4.a09cace0.chunk.js","sourcesContent":["import './error.scss';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <div className='error'>\r\n            <svg viewBox=\"0 0 64 64\">\r\n                <defs><linearGradient y2=\"161.29\" x2=\"0\" y1=\"218.22\" gradientUnits=\"userSpaceOnUse\" id=\"0\">\r\n                    <stop stopColor=\"#c52828\" />\r\n                    <stop offset=\"1\" stopColor=\"#ff5454\" /></linearGradient>\r\n                </defs>\r\n                <g transform=\"matrix(.92857 0 0 .92857-666.94-144.37)\">\r\n                    <circle r=\"28\" cy=\"189.93\" cx=\"752.7\" fill=\"url(#0)\" />\r\n                    <g fill=\"#fff\" fillOpacity=\".851\">\r\n                        <path d=\"m739.54 180.23c0-2.166 1.756-3.922 3.922-3.922 2.165 0 3.922 1.756 3.922 3.922 0 2.167-1.756 3.923-3.922 3.923-2.166 0-3.922-1.756-3.922-3.923m17.784 0c0-2.166 1.758-3.922 3.923-3.922 2.165 0 3.922 1.756 3.922 3.922 0 2.167-1.756 3.923-3.922 3.923-2.166 0-3.923-1.756-3.923-3.923\" />\r\n                        <path d=\"m766.89 200.51c-2.431-5.621-8.123-9.253-14.502-9.253-6.516 0-12.242 3.65-14.588 9.3-.402.967.056 2.078 1.025 2.48.238.097.485.144.727.144.744 0 1.45-.44 1.753-1.17 1.756-4.229 6.107-6.96 11.08-6.96 4.864 0 9.189 2.733 11.02 6.965.416.962 1.533 1.405 2.495.989.961-.417 1.405-1.533.989-2.495\" />\r\n                    </g>\r\n                </g>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { Link } from 'react-router-dom';\r\n\r\nexport default class RickAndMortyService {\r\n    _apiBase = 'https://rickandmortyapi.com/api';\r\n    _baseOffset = 1;\r\n\r\n    getResource = async (url) => {\r\n        const res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status:${res.status}`);\r\n        }\r\n        return await res.json();\r\n    }\r\n\r\n    //getAllPages = async () => {\r\n    //    const res = await this.getResource(`${this._apiBase}/character`);\r\n    //    return res.info.pages;\r\n    //}\r\n\r\n    getAllCharacters = async (offset = this._baseOffset, species = '') => {\r\n        const res = await this.getResource(`${this._apiBase}/character/?page=${offset}&species=${species}`);\r\n        return res.results.map(this._transformCharacter);\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}/character/${id}`);\r\n        return this._transformCharacter(res);\r\n    }\r\n\r\n    getAllEpisode = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}/episode/?page=${offset}`);\r\n        return res.results.map(this._transformEpisode);\r\n    }\r\n\r\n    getEpisode = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}/episode/${id}`);\r\n        return this._transformEpisode(res);\r\n    }\r\n\r\n\r\n    getAllLocation = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}/location/?page=${offset}`);\r\n        return res.results.map(this._transformLocation);\r\n    }\r\n\r\n    getLocation = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}/location/${id}`);\r\n        return this._transformLocation(res);\r\n    }\r\n\r\n    elements = (element, children) => {\r\n        return element.map(item => {\r\n            let id = item.match(/\\/([0-9]*)$/)[1];\r\n            return (\r\n                <Link to={`/characters/${id}`} key={id}>\r\n                    {children}\r\n                    <img\r\n                        src={`https://rickandmortyapi.com/api/character/avatar/${id}.jpeg`}\r\n                        alt=\"character\" />\r\n                </Link>)\r\n        })\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            status: char.status,\r\n            species: char.species,\r\n            image: char.image,\r\n            locationName: char.location.name,\r\n            locationUrl: char.location.url.slice(41),\r\n            episode: char.episode[0].match(/\\/([0-9]*)$/)[1],\r\n            episodes: char.episode.map(item => {\r\n                let id = item.match(/\\/([0-9]*)$/)[1];\r\n                return (\r\n                    <Link key={id} to={`/episodes/${id}`}>\r\n                        Episodes № {id}\r\n                    </Link>\r\n                )\r\n            }),\r\n            gender: char.gender\r\n        }\r\n    }\r\n\r\n    _transformEpisode = (episode) => {\r\n        return {\r\n            id: episode.id,\r\n            name: episode.name,\r\n            airDate: episode.air_date,\r\n            characters: this.elements(episode.characters),\r\n            url: episode.url\r\n        }\r\n    }\r\n\r\n    _transformLocation = (location) => {\r\n        return {\r\n            id: location.id,\r\n            name: location.name,\r\n            type: location.type,\r\n            dimension: location.dimension,\r\n            residents: this.elements(location.residents),\r\n            url: location.url\r\n        }\r\n    }\r\n}\r\n\r\n","import { Component } from 'react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nexport default class ErrorBoundary extends Component {\r\n\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage>'Something went wrong...'</ErrorMessage>\r\n        }\r\n        return this.props.children\r\n    }\r\n};\r\n\r\n","import { useEffect, useState } from 'react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Spinner from '../spinner/Spinner';\r\nimport RickAndMortyService from './../../services/RickAndMortyService';\r\n\r\nimport './randomChar.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst RandomChar = () => {\r\n    const [char, setChar] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n\r\n    const rickAndMortyService = new RickAndMortyService();\r\n\r\n    useEffect(() => {\r\n        updateChar();\r\n        const timeId = setInterval(updateChar, 100000);\r\n\r\n        return () => clearInterval(timeId);\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const updateChar = () => {\r\n        const id = Math.floor(Math.random() * (670 - 1) + 1);\r\n\r\n        onCharLoading();\r\n        rickAndMortyService\r\n            .getCharacter(id)\r\n            .then(onCharLoaded)\r\n            .catch(onError)\r\n    }\r\n\r\n    const onCharLoaded = (char) => {\r\n        setChar(char);\r\n        setLoading(false);\r\n    }\r\n\r\n    const onCharLoading = () => {\r\n        setLoading(true);\r\n    }\r\n\r\n    const onError = () => {\r\n        setError(true);\r\n        setLoading(false);\r\n    }\r\n\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n    const content = !(loading || error) ? <View char={char} /> : null;\r\n\r\n    return (\r\n        <div className='randomchar'>\r\n\r\n            {spinner}\r\n            {errorMessage}\r\n            {content}\r\n\r\n            <button\r\n                className='button button__random'\r\n                onClick={updateChar}>\r\n                try it\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst View = ({ char }) => {\r\n    const { id, name, image } = char;\r\n    return (\r\n        <div className='randomchar__card'>\r\n            <img src={image} alt={name} />\r\n            <Link to={`/characters/${id}`} className='randomchar__name' >\r\n                <h2>{name}</h2>\r\n            </Link>\r\n        </div >\r\n    )\r\n}\r\nexport default RandomChar;","import { useState } from 'react';\r\n\r\nimport './searchPanel.scss';\r\n\r\nconst SearchPanel = (props) => {\r\n    const [term, setTerm] = useState('');\r\n\r\n    const onUpdateSearch = (e) => {\r\n        const term = e.target.value;\r\n        setTerm(term)\r\n        props.onUpdateSearch(term);\r\n    }\r\n\r\n    return (\r\n        <div className='search-panel'>\r\n            <input\r\n                className='search-panel__input'\r\n                placeholder='Type a character`s name'\r\n                type='text'\r\n                value={term}\r\n                onChange={onUpdateSearch} />\r\n            <i className=\"search fas fa-search\"></i>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchPanel;","import { Field, Form, Formik } from 'formik';\r\nimport './itemFilter.scss';\r\n\r\nconst ItemFilter = (props) => {\r\n    const species = [\r\n        { value: '', label: 'All' },\r\n        { value: 'Human', label: 'Human' },\r\n        { value: 'Alien', label: 'Alien' },\r\n        { value: 'Humanoid', label: 'Humanoid' },\r\n        { value: 'Robot', label: 'Robot' },\r\n        { value: 'Animal', label: 'Animal' },\r\n        { value: 'Disease', label: 'Disease' },\r\n        { value: 'Mythological Creature', label: 'Mythological Creature' },\r\n        { value: 'Poopybutthole', label: 'Poopybutthole' },\r\n        { value: 'Cronenberg', label: 'Cronenberg' },\r\n        { value: 'Unknown', label: 'Unknown' },\r\n    ]\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                filter: ''\r\n            }}\r\n            onSubmit={({ filter }) => {\r\n                props.updateFilterChar('', filter)\r\n                props.onFilterChange(filter)\r\n            }}>\r\n            {({ values }) => (\r\n                <Form className='item-filter'>\r\n                    <Field\r\n                        className='item-filter__select'\r\n                        name=\"filter\"\r\n                        as=\"select\"\r\n                        type=\"text\">\r\n                        {\r\n                            species.map(({ value, label }, i) => {\r\n                                const isActive = values.filter === value;\r\n                                const clazz = isActive ? 'active' : '';\r\n                                return (\r\n                                    <option\r\n                                        className={`item-filter__option ${clazz}`}\r\n                                        key={i}\r\n                                        value={value}>\r\n                                        {label}\r\n                                    </option>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Field>\r\n                    <button className='button button__small' type='submit'>ok</button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default ItemFilter;","import { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport RickAndMortyService from './../../services/RickAndMortyService';\r\nimport Spinner from './../spinner/Spinner';\r\nimport SearchPanel from './../searchPanel/SearchPanel';\r\nimport ItemFilter from './../itemFilter/ItemFilter';\r\n\r\nimport './charList.scss';\r\n\r\nconst CharList = (props) => {\r\n    const [charList, setCharList] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(1);\r\n    const [charEnded, setCharEnded] = useState(false);\r\n    const [selectedChar, setSelectedChar] = useState(null);\r\n    const [term, setTerm] = useState('');\r\n    const [showInfo, setShowInfo] = useState(false);\r\n    const [filter, setFilter] = useState('');\r\n\r\n    const rickAndMortyService = new RickAndMortyService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, filter);\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    const onRequest = (offset, filter) => {\r\n        onCharListLoading();\r\n        rickAndMortyService\r\n            .getAllCharacters(offset, filter)\r\n            .then(onCharListLoaded)\r\n            .catch(onError)\r\n    }\r\n\r\n    const updateFilterChar = (offset, filter) => {\r\n        onCharListLoading();\r\n        rickAndMortyService\r\n            .getAllCharacters(offset, filter)\r\n            .then(onCharFilterLoaded)\r\n            .catch(onError)\r\n    }\r\n\r\n    const onCharFilterLoaded = (charList) => {\r\n        let ended = false;\r\n        if (charList.length < 20) {\r\n            ended = true;\r\n        }\r\n\r\n        let offset = 1;\r\n        if (offset < 2) {\r\n            offset = 2;\r\n        }\r\n\r\n        setCharList(charList);\r\n        setLoading(false);\r\n        setNewItemLoading(false);\r\n        setCharEnded(ended);\r\n        setOffset(offset);\r\n    }\r\n\r\n    const onCharListLoading = () => {\r\n        setNewItemLoading(true);\r\n    }\r\n\r\n    const onCharListLoaded = (newCharList) => {\r\n        let ended = false;\r\n        if (newCharList.length < 20) {\r\n            ended = true;\r\n        }\r\n\r\n        setCharList(charList => [...charList, ...newCharList]);\r\n        setLoading(false);\r\n        setNewItemLoading(false);\r\n        setOffset(offset + 1);\r\n        setCharEnded(ended);\r\n        setFilter(filter)\r\n    }\r\n\r\n    const onError = () => {\r\n        setError(true);\r\n        setLoading(false);\r\n    }\r\n\r\n    const onShowInfo = (id) => {\r\n        setSelectedChar(id);\r\n        setShowInfo(showInfo => !showInfo);\r\n    }\r\n\r\n    const renderItems = (arr) => {\r\n        const items = arr.map(({ id, name, image, status, locationName, episode, species, gender }) => {\r\n\r\n            let statusClassName;\r\n            switch (status) {\r\n                case \"Dead\":\r\n                    statusClassName = \"dead fa-skull-crossbones\";\r\n                    break;\r\n                case \"Alive\":\r\n                    statusClassName = \"alive heartbeat fa-heartbeat\";\r\n                    break;\r\n                default:\r\n                    statusClassName = \"unknown fa-question\";\r\n            }\r\n\r\n            let speciesClassName;\r\n            switch (species) {\r\n                case \"Human\":\r\n                    speciesClassName = \"fas fa-male\";\r\n                    break;\r\n                case \"Alien\":\r\n                    speciesClassName = \"fab fa-reddit-alien\";\r\n                    break;\r\n                case \"Humanoid\":\r\n                    speciesClassName = \"fas fa-pastafarianism\";\r\n                    break;\r\n                case \"Robot\":\r\n                    speciesClassName = \"fas fa-robot\";\r\n                    break;\r\n                case \"Animal\":\r\n                    speciesClassName = \"fas fa-paw\";\r\n                    break;\r\n                case \"Disease\":\r\n                    speciesClassName = \"fas fa-disease\";\r\n                    break;\r\n                case \"Mythological Creature\":\r\n                    speciesClassName = \"fas fa-spider\";\r\n                    break;\r\n                case \"Poopybutthole\":\r\n                    speciesClassName = \"fab fa-snapchat-ghost\";\r\n                    break;\r\n                case \"Cronenberg\":\r\n                    speciesClassName = \"fas fa-bug\";\r\n                    break;\r\n                default:\r\n                    speciesClassName = \"unknown fas fa-question\";\r\n            }\r\n\r\n            const active = selectedChar === id && showInfo ? 'active' : '';\r\n\r\n            return (\r\n                <li className='char__card' key={id} >\r\n                    <button\r\n                        className='char__descr'\r\n                        onClick={() => onShowInfo(id)}>\r\n                        <i className=\"descr far fa-eye\"></i>\r\n                    </button>\r\n                    <img className='char__img' src={image} alt={name} />\r\n                    <div className='char__block char-item'>\r\n                        <Link to={`/characters/${id}`} className='char-item__name'>{name.length > 15 ? `${name.slice(0, 14)}...` : name}</Link>\r\n                        <div className='char-item__block'>\r\n                            <div className='char-item__species'>\r\n                                Species\r\n                                <i className={`${speciesClassName}`} />\r\n                                {species}\r\n                            </div>\r\n                            <div className='char-item__status'>\r\n                                Status\r\n                                <i className={`fas ${statusClassName}`} />\r\n                                {status}\r\n                            </div>\r\n                        </div>\r\n                        <div className={`char-item__blocks ${active}`}>\r\n                            <div className='char-item__label'>\r\n                                Gender:<br />\r\n                                <span>{gender}</span>\r\n                            </div>\r\n                            <div className='char-item__label'>\r\n                                Location:<br />\r\n                                <span>{locationName}</span>\r\n                            </div>\r\n                            <div className='char-item__label'>\r\n                                First seen in::<br />\r\n                                <span>Episodes № {episode}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            )\r\n        })\r\n\r\n        const allCharList = items.length;\r\n\r\n        return (\r\n            <>\r\n                <div className='char__count'>results: {allCharList}</div>\r\n                <ul className='char__flex'>\r\n                    {items}\r\n                </ul>\r\n            </>\r\n        )\r\n    }\r\n\r\n    const searchItem = (items, term) => {\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n        return items.filter(item => item.name.toLowerCase().indexOf(term.toLowerCase()) > -1)\r\n    }\r\n\r\n    const onUpdateSearch = (term) => {\r\n        setTerm(term);\r\n    }\r\n\r\n    const onFilterChange = (filter) => {\r\n        setFilter(filter);\r\n    }\r\n\r\n    const items = renderItems(searchItem(charList, term));\r\n\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n    const spinner = loading ? <Spinner /> : null\r\n    const content = !(loading || error) ? items : null;\r\n\r\n    return (\r\n        <div className='char__list'>\r\n            <div className='char__select'>\r\n                <SearchPanel onUpdateSearch={onUpdateSearch} />\r\n                <ItemFilter onFilterChange={onFilterChange} updateFilterChar={updateFilterChar} />\r\n            </div>\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n            <button\r\n                className='button button__load'\r\n                disabled={newItemLoading}\r\n                style={{ 'display': charEnded ? 'none' : 'block' }}\r\n                onClick={() => onRequest(offset, filter)}>load more</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharList","import ErrorBoundary from './../errorBoundary/ErrorBoundary';\r\nimport RandomChar from './../randomChar/RandomChar';\r\nimport CharList from './../charList/CharList';\r\n\r\nconst CharactersPage = () => {\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar />\r\n            </ErrorBoundary>\r\n            <ErrorBoundary>\r\n                <CharList />\r\n            </ErrorBoundary>\r\n        </>)\r\n}\r\n\r\nexport default CharactersPage;"],"sourceRoot":""}